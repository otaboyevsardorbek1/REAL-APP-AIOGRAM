import logging

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery

from config import BOT_NAME

from app.database.requests import select_item_id, select_news_id
from app.common.filters import ChatTypeFilter
import app.keyboards.reply as rp
import app.keyboards.builder as bd

router_start = Router()
router_start.message.filter(ChatTypeFilter(['private']))

logger = logging.getLogger(__name__)

# –°–¢–ê–†–¢
@router_start.callback_query(F.data == 'back_main')
@router_start.message(F.text == '/start')
async def cmd_start(message: Message | CallbackQuery):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} ({message.from_user.id}) - –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞"
    )
    if isinstance(message, Message):
        await message.answer(
            f'–¢—ã –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ {BOT_NAME}. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',
            reply_markup=rp.main
        )
    else:
        await message.answer('')
        await message.message.answer(
            f'–¢—ã –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ {BOT_NAME}. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',
            reply_markup=rp.main
        )

# –ú–ê–ì–ê–ó–ò–ù - –ö–ê–¢–ï–ì–û–†–ò–ò
@router_start.callback_query(F.data == 'back_shop')
@router_start.message(F.text == 'üéÇ–ú–∞–≥–∞–∑–∏–Ω')
async def cmd_shop(message: Message | CallbackQuery):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} ({message.from_user.id}) - "
        "–∑–∞–ø—É—Å—Ç–∏–ª –ø–∞–Ω–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞"
    )
    if isinstance(message, Message):
        await message.answer(
            '–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞',
            reply_markup=await bd.shop_categories()
        )
    else:
        await message.answer('')
        await message.message.answer(
            '–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞',
            reply_markup=await bd.shop_categories()
        )

# –ú–ê–ì–ê–ó–ò–ù - –¢–û–í–ê–†–´
@router_start.callback_query(F.data.startswith('category_'))
async def cmd_shop_category(callback: CallbackQuery):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} ({callback.from_user.id}) - –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
    )
    number = int(callback.data.split('_')[-1])
    await callback.answer('')
    await callback.message.answer(
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä',
        reply_markup=await bd.shop_items(number)
    )

# –ú–ê–ì–ê–ó–ò–ù - –¢–û–í–ê–†
@router_start.callback_query(F.data.startswith('item_'))
async def cmd_shop_item(callback: CallbackQuery):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} ({callback.from_user.id}) - –≤—ã–±—Ä–∞–ª –æ—Å–º–æ—Ç—Ä –ø—Ä–µ–¥–º–µ—Ç–∞"
    )
    number = int(callback.data.split('_')[-1])
    item = await select_item_id(number)
    await callback.answer('')
    await callback.message.answer_photo(
        photo=item[4],
        caption=f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <b>{item[1]}</b>\n'
        f'–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <b>{item[2]}</b>\n'
        f'–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: <b>{item[3]}</b>'
    )

# –ù–û–í–û–°–¢–ò - –í–°–ï
@router_start.message(F.text == 'üéû–ù–æ–≤–æ—Å—Ç–∏')
async def cmd_news(message: Message):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} ({message.from_user.id}) - –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π"
    )
    await message.answer(
        "–ù–æ–≤–æ—Å—Ç–∏ –±–æ—Ç–∞",
        reply_markup=await bd.select_news()
    )

# –ù–û–í–û–°–¢–ò - –ü–†–û–°–ú–û–¢–†
@router_start.callback_query(F.data.startswith('news_'))
async def cmd_news_id(callback: CallbackQuery):
    logger.debug(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} ({callback.from_user.id}) - —Å–º–æ—Ç—Ä–∏—Ç –Ω–æ–≤–æ—Å—Ç–∏"
    )
    item = await select_news_id(callback.data.split('_')[-1])
    await callback.message.answer_photo(
        photo=item[3],
        caption=f"<b>{item[1]}</b>\n"
        f"{item[2]}"
    )
    
# –û –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ï
@router_start.message(F.text == '‚ùì–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ')
async def cmd_proger(message: Message):
    await message.answer(
        "–ë–æ—Ç–∞ –Ω–∞–ø–∏—Å–∞–ª - @jemkatrst\n"
        "–û–∫—Ä—É–∂–µ–Ω–∏–µ Visual Code\n"
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª Python (aiogram3), sqlite3 (aiosqlite)"
    )